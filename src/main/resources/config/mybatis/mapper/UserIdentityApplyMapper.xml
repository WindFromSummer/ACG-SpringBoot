<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zc.free.acg.mapper.UserIdentityApplyMapper">
  <resultMap id="BaseResultMap" type="zc.free.acg.model.UserIdentityApply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="identity_id" jdbcType="INTEGER" property="identityId" />
    <result column="apply_at" jdbcType="TIMESTAMP" property="applyAt" />
    <result column="reply_name" jdbcType="VARCHAR" property="replyName" />
    <result column="reply_info" jdbcType="VARCHAR" property="replyInfo" />
    <result column="apply_state" jdbcType="TINYINT" property="applyState" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="zc.free.acg.model.UserIdentityApply">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, identity_id, apply_at, reply_name, reply_info, apply_state
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="zc.free.acg.model.UserIdentityApplyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_identity_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="zc.free.acg.model.UserIdentityApplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_identity_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_identity_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_identity_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="zc.free.acg.model.UserIdentityApplyExample">
    delete from user_identity_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="zc.free.acg.model.UserIdentityApply">
    insert into user_identity_apply (id, user_id, identity_id, 
      apply_at, reply_name, reply_info, 
      apply_state, content)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{identityId,jdbcType=INTEGER}, 
      #{applyAt,jdbcType=TIMESTAMP}, #{replyName,jdbcType=VARCHAR}, #{replyInfo,jdbcType=VARCHAR}, 
      #{applyState,jdbcType=TINYINT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="zc.free.acg.model.UserIdentityApply">
    insert into user_identity_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="identityId != null">
        identity_id,
      </if>
      <if test="applyAt != null">
        apply_at,
      </if>
      <if test="replyName != null">
        reply_name,
      </if>
      <if test="replyInfo != null">
        reply_info,
      </if>
      <if test="applyState != null">
        apply_state,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="identityId != null">
        #{identityId,jdbcType=INTEGER},
      </if>
      <if test="applyAt != null">
        #{applyAt,jdbcType=TIMESTAMP},
      </if>
      <if test="replyName != null">
        #{replyName,jdbcType=VARCHAR},
      </if>
      <if test="replyInfo != null">
        #{replyInfo,jdbcType=VARCHAR},
      </if>
      <if test="applyState != null">
        #{applyState,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="zc.free.acg.model.UserIdentityApplyExample" resultType="java.lang.Long">
    select count(*) from user_identity_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_identity_apply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.identityId != null">
        identity_id = #{record.identityId,jdbcType=INTEGER},
      </if>
      <if test="record.applyAt != null">
        apply_at = #{record.applyAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.replyName != null">
        reply_name = #{record.replyName,jdbcType=VARCHAR},
      </if>
      <if test="record.replyInfo != null">
        reply_info = #{record.replyInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.applyState != null">
        apply_state = #{record.applyState,jdbcType=TINYINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update user_identity_apply
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      identity_id = #{record.identityId,jdbcType=INTEGER},
      apply_at = #{record.applyAt,jdbcType=TIMESTAMP},
      reply_name = #{record.replyName,jdbcType=VARCHAR},
      reply_info = #{record.replyInfo,jdbcType=VARCHAR},
      apply_state = #{record.applyState,jdbcType=TINYINT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_identity_apply
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      identity_id = #{record.identityId,jdbcType=INTEGER},
      apply_at = #{record.applyAt,jdbcType=TIMESTAMP},
      reply_name = #{record.replyName,jdbcType=VARCHAR},
      reply_info = #{record.replyInfo,jdbcType=VARCHAR},
      apply_state = #{record.applyState,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="zc.free.acg.model.UserIdentityApply">
    update user_identity_apply
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="identityId != null">
        identity_id = #{identityId,jdbcType=INTEGER},
      </if>
      <if test="applyAt != null">
        apply_at = #{applyAt,jdbcType=TIMESTAMP},
      </if>
      <if test="replyName != null">
        reply_name = #{replyName,jdbcType=VARCHAR},
      </if>
      <if test="replyInfo != null">
        reply_info = #{replyInfo,jdbcType=VARCHAR},
      </if>
      <if test="applyState != null">
        apply_state = #{applyState,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="zc.free.acg.model.UserIdentityApply">
    update user_identity_apply
    set user_id = #{userId,jdbcType=INTEGER},
      identity_id = #{identityId,jdbcType=INTEGER},
      apply_at = #{applyAt,jdbcType=TIMESTAMP},
      reply_name = #{replyName,jdbcType=VARCHAR},
      reply_info = #{replyInfo,jdbcType=VARCHAR},
      apply_state = #{applyState,jdbcType=TINYINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zc.free.acg.model.UserIdentityApply">
    update user_identity_apply
    set user_id = #{userId,jdbcType=INTEGER},
      identity_id = #{identityId,jdbcType=INTEGER},
      apply_at = #{applyAt,jdbcType=TIMESTAMP},
      reply_name = #{replyName,jdbcType=VARCHAR},
      reply_info = #{replyInfo,jdbcType=VARCHAR},
      apply_state = #{applyState,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>